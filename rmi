Interface â€“ Calculator:-
import java.rmi.Remote;
import java.rmi.RemoteException;
public interface Calculator extends Remote
{
 public int add(int x, int y) throws RemoteException;
 public int sub(int x, int y) throws RemoteException;
 public int mul(int x, int y) throws RemoteException;
 public int div(int x, int y) throws RemoteException;
 public int mod(int x, int y) throws RemoteException;
}
Server Class:-
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;
public class Server extends UnicastRemoteObject implements Calculator
{
 public Server() throws RemoteException
 {
 super();
 }
 public int add( int x, int y) throws RemoteException
 {
 return x+y;
 }
 public int sub( int x, int y) throws RemoteException
 {
 return x-y;
 }
 public int mul( int x, int y) throws RemoteException
 {
 return x*y;
 }
 public int div( int x, int y) throws RemoteException
 {
 return x/y;
 }
 public int mod( int x, int y) throws RemoteException
 {
 return x%y;
 }
 
 public static void main(String args[])throws RemoteException
 {
 Registry reg = LocateRegistry.createRegistry(1011);
 reg.rebind("server",new Server());
 System.out.println("server is running");
 }
}
Client Class:-
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
public class Client
{
 public static void main(String args[]) throws RemoteException
 {
 Client c = new Client();
 c.connectServer();
 }
 private void connectServer()
 {
 try
 {
 Registry reg = LocateRegistry.getRegistry("localhost",1011);
 Calculator c = (Calculator) reg.lookup("server");
 int a=40,b=20;
 System.out.println("Addition is "+c.add(a,b));
 System.out.println("Subtraction is "+c.sub(a,b));
 System.out.println("Multiplication is "+c.mul(a,b));
 System.out.println("Division is "+c.div(a,
